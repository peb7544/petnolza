<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.pet.community.model.mapper.CommunityMapper">
<!-- resultMap
	역할
	1. 조회된 컬럼명과 DTO의 필드명이 일치하지 않을 때 매핑시켜주는 역할
	2. <collection> 태그를 추가 작성하여 여러 행 결과가 조회되는 다른 select를 수행한 후 그 결과를 지정된 dto의 필드에 대입
	type 속성: 연결할 dto 경로 또는 별칭
	id 속성: 해당 태그를 식별할 값(이름 지정)
 -->
	

	<select id="selectOne">
	
	SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, B.CODE_NO, READ_COUNT,
	MEMBER_NO, MEMBER_NICKNAME,
	TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일"') BOARD_WRITE_DATE
	FROM "BOARD" B
	JOIN "MEMBER" USING(MEMBER_NO)
	WHERE BOARD_DEL_FL = 'N'
	AND B.CODE_NO = #{codeNo}
	AND BOARD_NO = #{boardNo}

	</select>
	
	<!-- 상세 조회한 게시글의 이미지 목록 조회 -->
	<!--  
	<select id="selectImageList" resultType="BoardImg">
		SELECT *
		FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
	</select>
	-->


	<!-- 조회 수 1 증가 -->
	<update id="updateReadCount">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>

	<!-- 조회 수 조회 -->
	<select id="selectReadCount">
		SELECT READ_COUNT
		FROM "BOARD"
		WHERE BOARD_NO = #{boardNo}
	</select>









	<!--	게시글 목록 조회 (검색X) -->
	<select id="getListCount">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND CODE_NO = #{groupCode}
	</select>

	<!--
    <![CDATA["문자열"]]> - 해당 태그 내부에 작성된 문자열은 특수 기호로 해석하지 말고
    문자(Character) 그대로 인식하라는 태그 (순수 문자 데이터임을 지정)
 -->
	<!-- 특정 게시판의 지정된 페이지 목록 조회 -->
	<select id="selectBoardList">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,

		<![CDATA[
			CASE
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'

				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 ) || '분 전'

				WHEN SYSDATE - BOARD_WRITE_DATE < 1
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 ) || '시간 전'

				ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')

			END BOARD_WRITE_DATE
			]]>

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND B.CODE_NO = #{codeNo}
		ORDER BY BOARD_NO DESC
	</select>


	<select id="getSearchCount">
		SELECT COUNT(*)
		FROM "BOARD"

		<!-- 작성자 검색인 경우 -->
		<if test='key == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>

		WHERE BOARD_DEL_FL = 'N'
		AND CODE_NO = #{codeNo}

		<choose>
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
		</choose>

	</select>


	<!--	게시글 목록 조회 (검색O) -->
	<select id="selectSearchList">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,

		<![CDATA[
			CASE
				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'

				WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 ) || '분 전'

				WHEN SYSDATE - BOARD_WRITE_DATE < 1
				THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 ) || '시간 전'

				ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')

			END BOARD_WRITE_DATE
			]]>

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND B.CODE_NO = #{codeNo}

		<choose>
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
		</choose>

		ORDER BY BOARD_NO DESC
	</select>
	
	
	<!-- 공지사항 수정 -->
	<update id="updateNotice">
		UPDATE "BOARD" SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent}
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_DEL_FL = 'N'
	</update>
	
	
	<!-- 공지사항 삭제 -->
	<update id="deleteNotice">
		UPDATE "BOARD" SET
		BOARD_DEL_FL = 'Y'
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<!-- 공지사항 등록 -->
	<insert id="insertNotice">
		INSERT INTO "BOARD" 
		VALUES (SEQ_BOARD_NO.NEXTVAL, 
				#{boardTitle},
				#{boardContent},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				DEFAULT,
				#{memberNo},
				#{groupCode},
				#{codeNo})
	</insert>

</mapper>
