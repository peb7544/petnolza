<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.pet.reserve.model.mapper.ReserveMapper">
 	
 	<!-- 객실 예약 목록 조회 -->
 	<select id="selectReserveList">
 		SELECT 
			 ROOM_ID
			,ROOM_NAME
			,ROOM_PRICE
			,CODE_NAME CODE_NAME_LIST
			,REVIEW_GRADE
			,FILE_RENAME
			<if test='inputStart != null  and inputEnd != null'>
			,#{inputStart} RESERVE_START
			,#{inputEnd} RESERVE_END
			</if>
		FROM (
			SELECT 
				 R.ROOM_ID 
				,ROOM_NAME 
				,ROOM_PRICE
				,(SELECT 
						SUBSTR(
					        XMLAGG(
					            XMLELEMENT(COL ,',', CODE_NAME) ORDER BY ORDERBY).EXTRACT('//text()'
					        ).GETSTRINGVAL()
					  , 2) CODE_NAME
					FROM ROOM_INFO RINFO
					JOIN CODE_MT USING(CODE_NO)
					WHERE RINFO.ROOM_ID = R.ROOM_ID
					AND RINFO.GROUP_CODE = 'CONV' ) CODE_NAME
				,(SELECT 
						ROUND(AVG(REVIEW_GRADE))  
				  FROM REVIEW RE
			    WHERE RE.ROOM_ID = R.ROOM_ID) REVIEW_GRADE
			  ,RESERVE_START
			  ,RESERVE_END
			  ,UF.FILE_PATH || UF.FILE_RENAME FILE_RENAME
			FROM ROOM R
			LEFT OUTER JOIN RESERVE RES ON R.ROOM_ID = RES.ROOM_ID
			LEFT OUTER JOIN UPLOAD_FILE UF ON R.ROOM_ID = UF.TABLE_NO AND UF.TABLE_NAME = 'ROOM' AND UF.THUMBNAIL = 'Y'
			WHERE 1=1
			AND ROOM_DEL_FL = 'N'
			<if test='inputStart != null  and inputEnd != null'>
			AND (R.ROOM_ID NOT IN (SELECT ROOM_ID  
													FROM RESERVE
													WHERE ((RESERVE_START BETWEEN #{inputStart} AND #{inputEnd}) AND (RESERVE_END BETWEEN #{inputStart} AND #{inputEnd})))
			     )
			 </if>
		) Z
		WHERE 1=1
		<if test='inputRoomNm != null'>
		AND ROOM_NAME LIKE '%' || #{inputRoomNm} || '%'
		</if>
		GROUP BY ROOM_ID
				,ROOM_NAME
				,ROOM_PRICE
				,CODE_NAME
				,REVIEW_GRADE
				,FILE_RENAME
		ORDER BY ROOM_ID
 	</select>
 	
 	<!-- 객실 예약 상세 조회 -->
 	<select id="selectReserveDetail">
 		SELECT
			 ROOM_ID
			,ROOM_NAME
			,ROOM_INFO 
			,ROOM_PRICE 
			,(SELECT 
					SUBSTR(
				        XMLAGG(
				            XMLELEMENT(COL ,',', CODE_NAME) ORDER BY ORDERBY).EXTRACT('//text()'
				        ).GETSTRINGVAL()
				  , 2) CODE_NAME
				FROM ROOM_INFO RINFO
				JOIN CODE_MT USING(CODE_NO)
				WHERE RINFO.ROOM_ID = R.ROOM_ID
				AND RINFO.GROUP_CODE = 'CONV' ) CODE_NAME_LIST
			,(SELECT 
					ROUND(AVG(REVIEW_GRADE))  
			  FROM REVIEW RE
		    WHERE RE.ROOM_ID = R.ROOM_ID) REVIEW_GRADE
		FROM ROOM R
		WHERE ROOM_ID = #{roomId}
 	</select>
 	
 	<!-- 객실 예약 등록 -->
 	<insert id="insertRegist">
 		<selectKey order="BEFORE" resultType="_int" keyProperty="reserveNo">
 			SELECT SEQ_RESERVE_NO.NEXTVAL FROM DUAL
 		</selectKey>
 		
 		INSERT INTO RESERVE
		VALUES (
			 #{reserveNo}
			,#{memberNo}
			,#{roomId}
			,#{reserveStart}
			,#{reserveEnd}
			,DEFAULT
			,DEFAULT
			,DEFAULT
			,#{reservePrice}
			,NULL
			,#{reserveUser}
		)
 	</insert>
 	
 	<!-- 서비스 예약 등록 -->
 	<insert id="insertService">
 		INSERT INTO SERVICE_RESERVE
		VALUES (
			 SEQ_SRV_RSR_NO.NEXTVAL
			,#{reserveNo}
			,#{serviceNo}
		)
 	</insert>
 	
 	<select id="selectRoomDetail">
 		SELECT 
			 ROOM_ID 
			,ROOM_INFO 
			,(SELECT 
					SUBSTR(
				        XMLAGG(
				            XMLELEMENT(COL ,',', CODE_NAME) ORDER BY ORDERBY).EXTRACT('//text()'
				        ).GETSTRINGVAL()
				  , 2) CODE_NAME
				FROM ROOM_INFO RINFO
				JOIN CODE_MT USING(CODE_NO)
				WHERE RINFO.ROOM_ID = R.ROOM_ID
				AND RINFO.GROUP_CODE = 'CONV' ) ROOM_INFO_LIST
			,ROOM_PRICE
		FROM ROOM R
 	</select>
</mapper>
